{
  // Place your Рабочая область ui-ulib-app snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  "Create a React component": {
    "prefix": "rfc",
    "body": [
      "import { FC } from 'react';",
      "import { classNames } from \"shared/lib/classNames\";",
      "import cls from './${TM_FILENAME_BASE}.module.scss';",
      "",
      "interface Props {",
      "\tclassName?: string;",
      "}",
      "",
      "export const ${1:${TM_FILENAME_BASE}}: FC<Props> = ({ className, children }) => {",
      "\treturn (",
      "\t\t<div className={classNames(cls.${2:${TM_FILENAME_BASE/.*/${0:/downcase}/}}, {}, [className || ''])}>",
      "\t\t\t{children}$0",
      "\t\t</div>",
      "\t);",
      "};",
      ""
    ],
    "description": "Create a React functional component using TypeScript and SCSS modules"
  },
  "Create unit test for unit test": {
    "prefix": "runit",
    "body": [
      "import { DeepPartial } from '@reduxjs/toolkit';",
      "import { StateSchema } from 'app/providers/StoreProvider';",
      "",
      "describe('$1', () => {",
      "\ttest('$2', () => {",
      "\t\texpect().toEqual();",
      "\t});",
      "});"
    ]
  }
}
